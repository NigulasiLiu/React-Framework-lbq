import React from 'react';
import { Row, Col,Card,Typography, Button, Input, Select, Form, Modal } from 'antd';
import { StatusItem,} from '../tableUtils';
import FetchAPIDataTable from '../AssetsCenter/FetchAPIDataTable';
import { DataContext, DataContextType} from '../ContextAPI/DataManager'
import { Link } from 'react-router-dom';
import DisplayFilteredData from '../ContextAPI/DisplayFilteredData';
import { LoadingOutlined } from '@ant-design/icons';
const { Text } = Typography;

      
interface VulnerabilityDetailsSidebarState {
    showModal:boolean;
    doneVulnerabilitiesCount:number;
    currentRecord: any, // 当前选中的记录

    isSidebarOpen: boolean;
    statusData:StatusItem[]

    vulnName:string;
    vulnBugExp:string;
    vulnType:string;
    poc:string;
    finger:string;
    isExp:boolean;

    columns:any[];
}
// 定义 VulnerabilityDetailsSidebar 组件的 Props 类型
interface VulnerabilityDetailsSidebarProps {
    host_uuid:string;
    //vulnInfoArray:VulnerabilityDetailsItemType;

    isSidebarOpen: boolean;
    toggleSidebar: () => void;
    onDoneButtonClick: (record:any) => Promise<void>;
  }

class VulnerabilityDetailsSidebar extends React.Component<VulnerabilityDetailsSidebarProps,VulnerabilityDetailsSidebarState> {
  constructor(props:any) {
    super(props);
    this.state = {

        doneVulnerabilitiesCount:0,
        currentRecord: null,
        showModal:false,
        vulnName:'',
        vulnBugExp:'',
        vulnType:'',
        poc:'',
        finger:'',
        isExp:false,

      isSidebarOpen: false,
      statusData: [
        { label: '通过项', value: 0, color: 'green' },
        { label: '严重风险项', value: 2, color: '#E53F3F' },
        { label: '高风险项', value: 3, color: 'orange' },
        { label: '中风险项', value: 2, color: 'yellow' },
        { label: '低风险项', value: 0, color: 'blue' },
      ],
      columns:[
        { 
          title: '影响主机', dataIndex: 'uuid', key: 'uuid',
          render: (text: string) => (
              // 使用模板字符串构造带查询参数的路径,encodeURIComponent 函数确保 text 被正确编码
              <Link to={`/app/detailspage?uuid=${encodeURIComponent(text)}`} target="_blank">
                <Button style={{fontWeight:'bold',border:'transparent',backgroundColor:'transparent',color:'#4086FF'}}>{text.slice(0,5)}</Button>
              </Link>
            ), 
        },
        { title: '主机IP', dataIndex: 'ip', key: 'ip',
        },
        { title: '发现时间', dataIndex: 'scanTime', 
        sorter: (a: any, b: any) => Date.parse(b.scanTime) - Date.parse(a.scanTime), 
        },
        {
            title: "操作",
            dataIndex: 'operation',
            
            render: (text:string, record:any) => (
                <div>
                  <Button onClick={()=>this.toggleModal(record)} className="custom-link-button">处理</Button>
                  {/* <Button onClick={this.showModal} className="custom-link-button">详情</Button> */}
                </div>
              ),
        },
    ],
    };
  }
componentDidMount(): void {
    this.setState({
        vulnName:'名称',
        poc:'危险等级',
        finger:'危险等级',
        isExp:false,

    })
}

toggleModal = (record = null) => {
  this.setState(prevState => ({
    showModal: !prevState.showModal,
    currentRecord: record // 设置当前记录，以便后续操作
  }));
}

handleOk = async () => {
  // 处理忽略操作
  const record = this.state.currentRecord;
  if (record) {
    // 调用API
    // 假设API调用的逻辑是放在handleDoneButtonClick方法中实现的
    await this.props.onDoneButtonClick(record);
  }
  this.toggleModal(); // 关闭模态框
}

handleCancel = () => {
  this.toggleModal(); // 关闭模态框
}


  toggleSidebar = () => {
    this.setState((prevState) => ({ isSidebarOpen: !prevState.isSidebarOpen }));
  };


    formItemLayout = {
        labelCol: {
          xs: { span: 24 },
          sm: { span: 6 },
        },
        wrapperCol: {
          xs: { span: 24 },
          sm: { span: 14 },
        },
      };

renderModal = () => {
    return (
      <>
      <Modal
        title="确认操作"
        visible={this.state.showModal}
        onOk={this.handleOk}
        onCancel={this.handleCancel}
        footer={[
          <Button key="back" onClick={this.handleCancel}>
            取消
          </Button>,
          <Button key="submit" style={{backgroundColor:'#1664FF',color:'white'}} onClick={this.handleOk}>
            是
          </Button>,
        ]}
      //style={{ top: '50%', transform: 'translateY(-50%)' }} // 添加这行代码尝试居中
      >
        确认已经处理选中的漏洞？
      </Modal>
    </>
    );
  };

  renderVulnDetail=(vulnOriginData:any[])=>{
    if(vulnOriginData!==undefined){
        const filteredData = vulnOriginData.filter(item => item.uuid === this.props.host_uuid);
        return(
          <div>
          {filteredData.length > 0 ? (//ul内置了外边距
          <ul style={{ width: '100%', padding: 0, margin: 0 }}>
          {filteredData.map((item, index) => (
          <Row key={index} >
              <Card style={{ width: 800, borderTop:'1px solid black',}}>
              {item.vul_detection_exp_result.map((expResult: {
                id: number; bug_exp: any; 
}, subIndex: string | number) => {
              const fingerResult = item.vul_detection_finger_result[subIndex];
              const pocResult = item.vul_detection_poc_result[subIndex];
              return (
                <React.Fragment key={`exp-${subIndex}`} >
                  <Card bordered={true} style={{ width: 800,paddingTop:'-10px',paddingBottom:'-10px',}}>
                  <Row >
                    <div style={{ fontSize: 19 }}>
                      {`漏洞名称[${expResult.bug_exp}]`}
                    </div>
                  </Row>
                  <Row>
                    <div style={{ fontSize: 16, marginTop: '10px', marginBottom: '10px' }}>漏洞信息</div>
                  </Row>
                  <Row style={{ width: '100%', borderBottom: '1px solid #E5E8EF' }}>
                    {/* 漏洞名称、编号等信息 */}
                    <Col md={8} style={{ fontSize: '14px', marginBottom: '8px' }}>
                      <Row>
                        <Text style={{ color: 'grey', marginTop: '3px', marginBottom: '3px' }} strong>漏洞名称</Text>
                      </Row>
                      <Row>
                        <Text style={{ marginTop: '3px', marginBottom: '3px' }}>{`漏洞名称[${expResult.bug_exp}]`}</Text>
                      </Row>
                    </Col>
                    <Col md={8} style={{ fontSize:'14px',marginBottom: '8px' }}>
                        <Row>
                            <Text style={{color:'grey', marginTop:'3px', marginBottom:'3px',}}strong>漏洞编号</Text> 
                        </Row>
                        <Row>
                            <Text style={{marginTop:'3px', marginBottom:'3px',}}>{expResult.id}</Text>
                        </Row>
                    </Col>
                    {/* 指纹信息 */}
                    <Col md={8} style={{ fontSize: '14px', marginBottom: '8px' }}>
                      <Row>
                        <Text style={{ color: 'grey', marginTop: '3px', marginBottom: '3px' }} strong>漏洞类型指纹</Text>
                      </Row>
                      <Row>
                        <Text style={{ marginTop: '3px', marginBottom: '3px' }}>{fingerResult ? `漏洞类型指纹[${fingerResult.finger}]` : 'N/A'}</Text>
                      </Row>
                    </Col>
                    {/* 风险级别 */}
                    <Col md={8} style={{ fontSize: '14px', marginBottom: '8px' }}>
                      <Row>
                        <Text style={{ color: 'grey', marginTop: '3px', marginBottom: '3px' }} strong>风险级别</Text>
                      </Row>
                      <Row>
                        <Text style={{ marginTop: '3px', marginBottom: '3px' }}>{pocResult ? `风险级别[${pocResult.bug_poc}]` : 'N/A'}</Text>
                      </Row>
                    </Col>
                    <Col md={8} style={{ fontSize:'14px',marginBottom: '8px' }}>
                        <Row>
                            <Text style={{color:'grey', marginTop:'3px', marginBottom:'3px',}}strong>是否有exp</Text> 
                        </Row>
                        <Row>
                            <Text style={{marginTop:'3px', marginBottom:'3px',}}>{expResult.bug_exp?'是':'否'}</Text>
                        </Row>
                    </Col>
                  </Row>
                  <Row style={{width:'100%',}}>
                    <Col md={24} style={{ fontSize:'14px',marginBottom: '8px' }}>
                        <Row>
                            <Text style={{color:'grey', marginTop:'3px', marginBottom:'3px',}}strong>{'漏洞概述'}</Text> 
                        </Row>
                        <Row>
                            <Text style={{marginTop:'3px', marginBottom:'3px',}}>{'漏洞概述:'+pocResult.url+''}</Text>
                        </Row>
                    </Col>
                  </Row>
                  </Card>
                </React.Fragment>
              );
              })}
                  {/* <Row style={{borderBottom:'1px solid #E5E8EF'}}>
                  <div style={{fontSize:19,}}>
                      {'漏洞名称['+item.vul_detection_exp_result[0].bug_exp+']'}
                  </div>
                  </Row>
                  <Row>
                      <Row>
                          <div style={{fontSize:16, marginTop:'10px', marginBottom:'10px',}}>漏洞信息</div>
                      </Row>
                      <Row style={{width:'100%',borderBottom: '1px solid #E5E8EF', }}>
                          <Row style={{width:'100%',}}>
                              <Col md={8} style={{ fontSize:'14px',marginBottom: '8px' }}>
                                  <Row>
                                      <Text style={{color:'grey', marginTop:'3px', marginBottom:'3px',}}strong>漏洞名称</Text> 
                                  </Row>
                                  <Row>
                                      <Text style={{marginTop:'3px', marginBottom:'3px',}}>{'漏洞名称['+item.vul_detection_exp_result[0].bug_exp+']'}</Text>
                                  </Row>
                              </Col>
                              <Col md={8} style={{ fontSize:'14px',marginBottom: '8px' }}>
                                  <Row>
                                      <Text style={{color:'grey', marginTop:'3px', marginBottom:'3px',}}strong>漏洞编号</Text> 
                                  </Row>
                                  <Row>
                                      <Text style={{marginTop:'3px', marginBottom:'3px',}}>{item.vul_detection_exp_result[0].id}</Text>
                                  </Row>
                              </Col>
                              <Col md={8} style={{ fontSize:'14px',marginBottom: '8px' }}>
                                  <Row>
                                      <Text style={{color:'grey', marginTop:'3px', marginBottom:'3px',}}strong>漏洞类型</Text> 
                                  </Row>
                                  <Row>
                                      <Text style={{marginTop:'3px', marginBottom:'3px',}}>{'漏洞类型['+item.vul_detection_finger_result[0].finger+']'}</Text>
                                  </Row>
                              </Col>
                          </Row>
                          <Row style={{width:'100%',}}>
                              <Col md={8} style={{ fontSize:'14px',marginBottom: '8px' }}>
                                  <Row>
                                      <Text style={{color:'grey', marginTop:'3px', marginBottom:'3px',}}strong>风险级别</Text> 
                                  </Row>
                                  <Row>
                                      <Text style={{marginTop:'3px', marginBottom:'3px',}}>{'风险级别['+item.vul_detection_poc_result[0].bug_poc+']'}</Text>
                                  </Row>
                              </Col>
                              <Col md={8} style={{ fontSize:'14px',marginBottom: '8px' }}>
                                  <Row>
                                      <Text style={{color:'grey', marginTop:'3px', marginBottom:'3px',}}strong>是否有exp</Text> 
                                  </Row>
                                  <Row>
                                      <Text style={{marginTop:'3px', marginBottom:'3px',}}>{item.vul_detection_exp_result[0].bug_exp?'是':'否'}</Text>
                                  </Row>
                              </Col>
                          </Row>
                          <Row style={{width:'100%',}}>
                          <Col md={24} style={{ fontSize:'14px',marginBottom: '8px' }}>
                              <Row>
                                  <Text style={{color:'grey', marginTop:'3px', marginBottom:'3px',}}strong>{'漏洞概述'}</Text> 
                              </Row>
                              <Row>
                                  <Text style={{marginTop:'3px', marginBottom:'3px',}}>{'漏洞概述:'+item.vul_detection_poc_result[0].url+''}</Text>
                              </Row>
                          </Col>
                          </Row>
                      </Row>
                  </Row>
                  <Row style={{borderTop:'1px solid #E5E8EF' ,}}>
                      <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: 14 ,marginBottom: 10 ,fontWeight: 'bold'}}>
                          <h2 style={{ fontSize:'16px',fontWeight: 'bold', marginLeft: '0px'}}>影响资产</h2>
                      </div>
                      <div style={{ width: '100%', margin: '0 auto'}}>
                          <FetchAPIDataTable
                              apiEndpoint={"http://localhost:5000/api/vulndetetion/query_uuid?uuid="+this.props.host_uuid}
                              timeColumnIndex={['scanTime']}
                              columns={this.state.columns}
                              currentPanel="vulnerdetailsidebar"
                          />
                      </div>
                  </Row> */}
              </Card>
          </Row>                                
          ))}
          </ul>
          ) : (<p>No data available.</p>)}  
          </div>
        )
    }
    else{
      return (
          
        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', }}>
        <LoadingOutlined style={{ fontSize: '3em' }} />
        </div>
      )
  }
  }
  render() {
    const { isSidebarOpen, toggleSidebar,} = this.props;
        return(
            <DataContext.Consumer>
            {(context: DataContextType | undefined) => {
            if (!context) {
                return (
                  <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', }}>
                  <LoadingOutlined style={{ fontSize: '3em' }} />
                  </div>); // 或者其他的加载状态显示
            }
            // 从 context 中解构出 vuln的详细信息，这部分信息是通过特殊的
            const {transformedData,vulnOriginData} = context;
            // const filteredTransformedData = transformedData.filter(item => item.ip === '127.0.0.1')[0];
            // const data = {
            //     '漏洞名称': '漏洞id'+filteredTransformedData.id+'(Sudo 本地权限提升漏洞)',
            //     '漏洞编号': filteredTransformedData.vul_detection_exp_result_bug_exp,
            //     '漏洞类型': '漏洞finger_id'+filteredTransformedData.vul_detection_finger_result_id+'(文件访問前链接解析不正确)',
            //     '风险级别': '漏洞poc_id'+filteredTransformedData.vul_detection_poc_result_id+'(高危)',
            //     '是否有exp': '是',};  
            //     const data1={
            //         '漏洞poc': filteredTransformedData.vul_detection_poc_result_url+'(本地非特权用户可以通过将临时文件替换为任意文件目标的符号链接来获取文件所有权和提升特权。这会影响许可模式下的SELinux RBAC支持。没有SELinux的机器不容易受到攻击。)',
            //         }
            return (
            <div className={isSidebarOpen ? "sidebar open" : "sidebar"}>
                {/* <DisplayFilteredData
                 filterData={vulnFilteredData}                
                /> */}
                <Row style={{width:'100%'}}>
                <Col md={24} style={{borderTop: '5px solid #4086FF'}}>
                {this.renderVulnDetail(vulnOriginData)}
                </Col>
                </Row>
                {this.renderModal()}
            </div>
            );
            }}
            </DataContext.Consumer>
        )


        }
  }
  
  export default VulnerabilityDetailsSidebar;